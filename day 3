6)multiplication
public class Multiplication {
    public static void main(String[] args) {
        int num1 = 5;
        int num2 = 10;

        int result = num1 * num2;

        System.out.println("Multiplication Result: " + result);
    }
}


7)validity checker
public class CharacterNumberSeparator {
    public static void main(String[] args) {
        String input = "Hello123World456";
        String characters = input.replaceAll("[^a-zA-Z]", "");
        String numbers = input.replaceAll("[^0-9]", "");
        System.out.println("Characters: " + characters);                      
        System.out.println("Numbers: " + numbers);                            
    }                                                                                
}

8)special characters
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class SpecialCharactersCounter {
    public static void main(String[] args) {
        String line = "Hello! How are you? 123 #$%^&*";
        Pattern pattern = Pattern.compile("[^a-zA-Z0-9\\s]");
        Matcher matcher = pattern.matcher(line);
        int count = 0;
        System.out.println("Special Characters in the Line:");
        while (matcher.find()) {
            System.out.println(matcher.group());
            count++;
        }
        System.out.println("Number of Special Characters: " + count);
    }}
9 )ALPHABETICALLY REVERSE
  import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class ReverseAlphabetical {
    public static void main(String[] args) {
        List<String> fruits = new ArrayList<>();
        fruits.add("Apple");
        fruits.add("Banana");
        fruits.add("Orange");
        fruits.add("Pineapple");
        fruits.add("Grapes");
        Collections.sort(fruits, new Comparator<String>() {
            @Override
            public int compare(String o1, String o2) {
                return o2.compareTo(o1);
            }
        });
        System.out.println("Fruits sorted in reverse alphabetical order:");
        for (String fruit : fruits) {
            System.out.println(fruit);
        }
    }
}

10) HALLOW SQUARE PATTERN
  public class HollowSquarePattern {
    public static void main(String[] args) {
        int rows = 5; 
        for (int i = 1; i <= rows; i++) {
            for (int j = 1; j <= rows; j++) {
                if (i == 1 || i == rows || j == 1 || j == rows) {
                    System.out.print("*");
                } else {
                    System.out.print(" ");3 REVERSED STRING

import java.util.Scanner;

public class ReverseString {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string to reverse: ");
        String input = scanner.nextLine();
        scanner.close();
        
        String reversedString = reverseUsingStringBuilder(input);
        
        System.out.println("Reversed string: " + reversedString);
    }
    
    public static String reverseUsingStringBuilder(String str) {
        StringBuilder sb = new StringBuilder(str);
        return sb.reverse().toString();
    }
}


        for (int i = 0; i < input.length(); i++) {
            char c = input.charAt(i);
            if (!isVowel(c)) {
                output += c;
            }
        }

        System.out.println("The string without vowels is: " + output);
    }

    public static boolean isVowel(char c) {
        c = Character.toUpperCase(c);
        return c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U';
    }
}
                }
            }
            System.out.println();
        }
    }
}
